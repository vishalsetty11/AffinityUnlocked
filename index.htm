<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Love Score Calculator</title>
    <script src="https://cdn.plot.ly/plotly-latest.min.js"></script>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #1a1a1a;
            color: #f0f0f0;
            display: flex;
            flex-direction: column;
            align-items: center;
            padding: 20px;
            margin: 0;
            min-height: 100vh;
            box-sizing: border-box;
        }
        .container {
            background-color: #2c2c2c;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
            width: 90%;
            max-width: 800px;
            margin-bottom: 20px;
            display: flex;
            flex-direction: column;
            gap: 20px;
        }
        h1 {
            color: #ff6b6b;
            text-align: center;
            margin-bottom: 25px;
            font-size: 2.2em;
        }
        .input-group {
            display: flex;
            flex-direction: column;
            margin-bottom: 15px;
        }
        .input-group label {
            margin-bottom: 8px;
            font-size: 1.1em;
            color: #e0e0e0;
        }
        .input-group input[type="number"],
        .input-group select {
            padding: 12px;
            border: 1px solid #555;
            border-radius: 6px;
            background-color: #3a3a3a;
            color: #f0f0f0;
            font-size: 1em;
            width: calc(100% - 24px);
        }
        .input-group input[type="number"]:focus,
        .input-group select:focus {
            outline: none;
            border-color: #ff6b6b;
            box-shadow: 0 0 0 2px rgba(255, 107, 107, 0.3);
        }
        .radio-group label {
            margin-right: 15px;
            cursor: pointer;
            font-size: 1em;
        }
        .radio-group input[type="radio"] {
            margin-right: 5px;
        }
        button {
            background-color: #ff6b6b;
            color: white;
            padding: 14px 25px;
            border: none;
            border-radius: 8px;
            font-size: 1.1em;
            cursor: pointer;
            transition: background-color 0.3s ease, transform 0.2s ease;
            width: fit-content;
            align-self: center;
            margin-top: 15px;
        }
        button:hover {
            background-color: #e05c5c;
            transform: translateY(-2px);
        }
        #result {
            margin-top: 25px;
            text-align: center;
            font-size: 1.8em;
            font-weight: bold;
            color: #4CAF50;
        }
        #chart {
            width: 100%;
            height: 400px;
            margin-top: 30px;
            background-color: #2c2c2c; /* Ensure Plotly container has background */
            border-radius: 10px;
            overflow: hidden; /* To keep graph within rounded corners */
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>❤️ Love Score Calculator ❤️</h1>

        <div class="input-group">
            <label for="baseScore">Is there communication/friendship? (Base Score)</label>
            <div class="radio-group">
                <input type="radio" id="base50" name="baseScore" value="50" checked>
                <label for="base50">Yes (50 points)</label>
                <input type="radio" id="base0" name="baseScore" value="0">
                <label for="base0">No / Ghosted (0 points)</label>
            </div>
        </div>

        <div class="input-group">
            <label for="replyTime">Reply Time (T in hours, e.g., 3 for 3 hours)</label>
            <input type="number" id="replyTime" value="5" min="0" step="0.1">
        </div>

        <div class="input-group">
            <label for="emojiUsage">Emoji Usage Ratio (E, e.g., 0.6 for 60% of messages)</label>
            <input type="number" id="emojiUsage" value="0.3" min="0" max="1" step="0.01">
        </div>

        <div class="input-group">
            <label for="messageBalance">Message Balance Ratio (M, e.g., 0.5 for balanced, 0.2 for imbalanced)</label>
            <input type="number" id="messageBalance" value="0.4" min="0" max="1" step="0.01">
        </div>

        <div class="input-group">
            <label for="consistency">Consistency Ratio (C, e.g., 0.7 for highly consistent, 0.2 for low)</label>
            <input type="number" id="consistency" value="0.6" min="0" max="1" step="0.01">
        </div>

        <button onclick="calculateLoveScore()">Calculate Love Score</button>

        <div id="result">Love Score: 0</div>
    </div>

    <div class="container">
        <h2>Score Breakdown</h2>
        <div id="chart"></div>
    </div>

    <script>
        function calculateR(T) {
            if (T < 2) return 25;
            if (T < 5) return 15;
            if (T < 10) return 10;
            if (T < 20) return 5;
            if (T > 30) return -15;
            return 0; // For T between 20 and 30
        }

        function calculateE(e) {
            if (e > 0.5) return 20;
            if (e > 0.2) return 15;
            if (e > 0.1) return 10;
            if (e > 0.05) return 5;
            return 0;
        }

        function calculateM(m) {
            if (m > 0.45) return 15;
            if (m > 0.35) return 10;
            if (m > 0.25) return 5;
            if (m < 0.25) return -10;
            return 0; // For m = 0.25
        }

        function calculateC(d) {
            if (d > 0.8) return 15;
            if (d > 0.5) return 10;
            if (d > 0.3) return 5;
            return 0;
        }

        function calculateLoveScore() {
            const baseScoreInput = document.querySelector('input[name="baseScore"]:checked').value;
            const baseScore = parseInt(baseScoreInput);

            const replyTime = parseFloat(document.getElementById('replyTime').value);
            const emojiUsage = parseFloat(document.getElementById('emojiUsage').value);
            const messageBalance = parseFloat(document.getElementById('messageBalance').value);
            const consistency = parseFloat(document.getElementById('consistency').value);

            const rScore = calculateR(replyTime);
            const eScore = calculateE(emojiUsage);
            const mScore = calculateM(messageBalance);
            const cScore = calculateC(consistency);

            const totalLoveScore = baseScore + rScore + eScore + mScore + cScore;

            document.getElementById('result').innerText = `Love Score: ${totalLoveScore}`;

            plotGraph(baseScore, rScore, eScore, mScore, cScore, totalLoveScore);
        }

        function plotGraph(base, r, e, m, c, total) {
            const data = [{
                x: ['Base', 'Reply Time (R)', 'Emoji Usage (E)', 'Message Balance (M)', 'Consistency (C)', 'Total Score'],
                y: [base, r, e, m, c, total],
                type: 'bar',
                marker: {
                    color: ['#FFC107', '#2196F3', '#E91E63', '#9C27B0', '#00BCD4', '#4CAF50']
                }
            }];

            const layout = {
                title: {
                    text: 'Love Score Component Breakdown',
                    font: {
                        color: '#f0f0f0'
                    }
                },
                paper_bgcolor: 'rgba(0,0,0,0)', /* Transparent background for the plot area */
                plot_bgcolor: 'rgba(0,0,0,0)', /* Transparent background for the plotting area */
                xaxis: {
                    tickfont: {
                        color: '#f0f0f0'
                    },
                    linecolor: '#555',
                    gridcolor: '#333'
                },
                yaxis: {
                    title: {
                        text: 'Points',
                        font: {
                            color: '#f0f0f0'
                        }
                    },
                    tickfont: {
                        color: '#f0f0f0'
                    },
                    linecolor: '#555',
                    gridcolor: '#333'
                },
                margin: {
                    l: 50,
                    r: 50,
                    b: 100,
                    t: 50,
                    pad: 4
                },
                responsive: true
            };

            Plotly.newPlot('chart', data, layout);
        }

        // Initialize with a default calculation on load
        document.addEventListener('DOMContentLoaded', calculateLoveScore);
    </script>
</body>
</html>